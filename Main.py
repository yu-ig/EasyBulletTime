from linebot import (    LineBotApi, WebhookHandler)from linebot.exceptions import (    LineBotApiError, InvalidSignatureError)from linebot.models import (    MessageEvent, TextMessage, TextSendMessage,    SourceUser, SourceGroup, SourceRoom,    TemplateSendMessage, ConfirmTemplate, MessageAction,    ButtonsTemplate, ImageCarouselTemplate, ImageCarouselColumn, URIAction,    PostbackAction, DatetimePickerAction,    CameraAction, CameraRollAction, LocationAction,    CarouselTemplate, CarouselColumn, PostbackEvent,    StickerMessage, StickerSendMessage, LocationMessage, LocationSendMessage,    ImageMessage, VideoMessage, AudioMessage, FileMessage,    UnfollowEvent, FollowEvent, JoinEvent, LeaveEvent, BeaconEvent,    FlexSendMessage, BubbleContainer, ImageComponent, BoxComponent,    TextComponent, SpacerComponent, IconComponent, ButtonComponent,    SeparatorComponent, QuickReply, QuickReplyButton)import osfrom flask import Flask, request, abort# 合言葉リストwatchWords={}# YOUR_CHANNEL_ACCESS_TOKEN = os.environ['zdfLIJ+l+p0Ubidq/helAEkXx7xY7Xhywp1PKlsBh3zdH0EQ0gSIoHc0fnHDsNpuwXIrCR2z128PXC6OLKtTrUtpC9FwZrlLfrEdWF/9vAsP0oAytqYEdP3pVJW8NYHqZ7YrUeqDZKqHUTyLFeYdJAdB04t89/1O/w1cDnyilFU=']# YOUR_CHANNEL_SECRET = os.environ["73b66d519d69ee046316e77735e6e0a4"]line_bot_api = LineBotApi('zdfLIJ+l+p0Ubidq/helAEkXx7xY7Xhywp1PKlsBh3zdH0EQ0gSIoHc0fnHDsNpuwXIrCR2z128PXC6OLKtTrUtpC9FwZrlLfrEdWF/9vAsP0oAytqYEdP3pVJW8NYHqZ7YrUeqDZKqHUTyLFeYdJAdB04t89/1O/w1cDnyilFU=')handler = WebhookHandler('73b66d519d69ee046316e77735e6e0a4')''' Flask '''app = Flask(__name__)@app.route("/")def index():    return "Hello world"@app.route("/callback", methods=['POST'])def callback():    # get X-Line-Signature header value    signature = request.headers['X-Line-Signature']    # get request body as text    body = request.get_data(as_text=True)    app.logger.info("Request body: " + body)    # handle webhook body    try:        handler.handle(body, signature)    except InvalidSignatureError:        abort(400)    return 'OK'@handler.add(MessageEvent, message=TextMessage)def handle_message(event):    line_bot_api.reply_message(        event.reply_token,        TextSendMessage(text=event.message.text))''''''''''''def main():    passif __name__ == "__main__":    app.run(debug=True)